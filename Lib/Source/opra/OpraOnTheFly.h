/* This file is part of SparQ, a toolbox for qualitative spatial reasoning.
   Copyright (C) 2006, 2007 SFB/TR 8 Spatial Cognition, Project R3-[Q-Shape]
   More info at http://www.sfbtr8.spatial-cognition.de/project/r3/sparq/

  SparQ is free software and has been released under the terms of the GNU
  General Public License version 3 or later. You should have received a
  copy of the GNU General Public License along with this program. If not,
  see <http://www.gnu.org/licenses/>.
*/


/**
 *  for given relations A i_j B and B k_l C this class generates their composition A t_s C
 */


#ifndef OPRAONTHEFLY_H_
#define OPRAONTHEFLY_H_

#include <set>
#include "Configuration.h"
#include "Misc.h"
#include <string>

#define MAX_STRBUF 1024

class OpraOnTheFly {

private:

public:
    OpraOnTheFly(int _n, int _i, int _j, int _k, int _l);
    virtual ~OpraOnTheFly();

    int i, j, k, l;

    // the set compositionTable contains OPRA-configurations and sorts them automatically.
    std::set<Configuration,Misc::conflt> compositionTable;




    // the valid compositions are generated by this function
    std::set<Configuration,Misc::conflt> generateCompositionTable();

    // this function returns compositions in string.
    std::string getComposition(std::set<Configuration,Misc::conflt> compositionTable);




    // prints the compositions
    void printComposition(std::set<Configuration,Misc::conflt> compositionTable);



};


std::string getConverse(int, int, int);


// this converts int to string
extern "C" std::string int2str(int nr);
extern int m;


#endif /*OPRAONTHEFLY_H_*/
